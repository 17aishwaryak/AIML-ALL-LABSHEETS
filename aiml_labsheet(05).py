# -*- coding: utf-8 -*-
"""AIML labsheet(05)

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1toP1bAfzbjzGKZkJCBGf4axXlLgExRs-
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd
import seaborn as sns
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import classification_report
from sklearn.model_selection import train_test_split
from sklearn.metrics import roc_auc_score
from sklearn.model_selection import GridSearchCV
sns.set()

df=pd.read_csv('/content/heart.csv')

print(df.info())

print(df.shape)
print(df.head)

sns.countplot(df['target'])

sns.barplot(df['target'])

x=df.drop(columns=['target'])
y=df['target']
knn=KNeighborsClassifier()
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)
knn.fit(x_train,y_train)

#training the model
knn.fit(x_train,y_train)
KNeighborsClassifier(algorithm='auto',leaf_size=30,metric='minkowski',metric_params=None,n_jobs=None,n_neighbors=5,p=2,weights='uniform')

y_pred=knn.predict(x_test)

print(classification_report(y_test,y_pred))

roc_auc_score(y_test,y_pred)

leaf_size=list(range(1,50))
n_neighbors=list(range(1,30))
p=[1,2]
hyperparameters=dict(n_neighbors=n_neighbors,p=p)

leaf_size=list(range(1,50))
n_neighbors=list(range(1,30))
p=[1,2]
hyperparameters=dict(n_neighbors=n_neighbors,p=p)

knn_2=KNeighborsClassifier()
clf=GridSearchCV(knn_2,hyperparameters,cv=10)
best_model=clf.fit(x,y)

print('Best leaf_size:', best_model.best_estimator_.get_params()['leaf_size'])
print('Best p:', best_model.best_estimator_.get_params()['p'])
print('Best n_neighbors:', best_model.best_estimator_.get_params()['n_neighbors'])
print('Best Score:', best_model.best_score_)

y_pred=best_model.predict(x_test)

print(classification_report(y_test,y_pred))
print("AUC SCORE is",roc_auc_score(y_test,y_pred))

